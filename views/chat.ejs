<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AI Chat Interface</title>
  <style>
    body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
    #chat-container { border: 1px solid #ccc; height: 400px; overflow-y: auto; padding: 10px; margin-bottom: 10px; }
    .message { margin-bottom: 10px; padding: 5px; border-radius: 5px; }
    .user-message { background-color: #e6f3ff; text-align: right; }
    .ai-message { background-color: #f0f0f0; }
    #message-input { width: 80%; padding: 5px; }
    #send-button { width: 18%; padding: 5px; }
  </style>
</head>
<body>
    <h1>maichaine</h1>
    <div id="chat-container">
      <% messages.forEach(function(message) { %>
        <div class="message <%= message.type %>-message"><%= message.content %></div>
      <% }); %>
    </div>
    <form id="chat-form">
      <input type="text" id="message-input" placeholder="Type your message..." required>
      <button type="submit" id="send-button">Send</button>
    </form>

    <script>
      const socket = new WebSocket('ws://localhost:8080');
      const chatContainer = document.getElementById('chat-container');
      const chatForm = document.getElementById('chat-form');
      const messageInput = document.getElementById('message-input');

      let currentAiMessage = null;

      socket.onmessage = function(event) {
        const message = JSON.parse(event.data);
        
        if (message.type === 'user') {
          const messageElement = document.createElement('div');
          messageElement.classList.add('message', 'user-message');
          messageElement.textContent = message.content;
          chatContainer.appendChild(messageElement);
        } else if (message.type === 'ai') {
          if (message.isChunk) {
            if (!currentAiMessage) {
              currentAiMessage = document.createElement('div');
              currentAiMessage.classList.add('message', 'ai-message');
              chatContainer.appendChild(currentAiMessage);
            }
            currentAiMessage.textContent += message.content;
          } else if (message.isComplete) {
            currentAiMessage = null;
          }
        }
          
        chatContainer.scrollTop = chatContainer.scrollHeight;
      };

      chatForm.addEventListener('submit', function(e) {
        e.preventDefault();
        const message = messageInput.value;
        if (message) {
          socket.send(JSON.stringify({ event: 'sendMessage', data: message }));
          messageInput.value = '';
        }
      });
    </script>
</body>
</html>